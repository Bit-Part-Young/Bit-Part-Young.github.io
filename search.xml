<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>交大常用网址汇总</title>
      <link href="/posts/64567.html"/>
      <url>/posts/64567.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="交大常用网址汇总"><a href="#交大常用网址汇总" class="headerlink" title="交大常用网址汇总"></a>交大常用网址汇总</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>整理了一下自己用到过（看到过）的校内网址，并按自己的使用频率进行了一定的排序，应该对新入学的交大研究生师弟师妹们有些用处。</p><p>欢迎在博客或推送评论区处评论添加，一起补充~</p><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> 注：该内容在博客、推送、思源笔记上同步发布</div><blockquote><p>思源笔记地址：<a href="https://notes.sjtu.edu.cn/s/QmcG0W06p">https://notes.sjtu.edu.cn/s/QmcG0W06p</a></p></blockquote><blockquote><p>整理：By 小小角色、海心</p><p>整理时间：2021.11.29，不定期更新维护</p></blockquote><hr><h2 id="生活类"><a href="#生活类" class="headerlink" title="生活类"></a>生活类</h2><h3 id="jaccount登录验证码自动识别油猴插件"><a href="#jaccount登录验证码自动识别油猴插件" class="headerlink" title="jaccount登录验证码自动识别油猴插件"></a>jaccount登录验证码自动识别油猴插件</h3><ul><li>学校的很多网站都需jaccount登录，输验证码；该插件可解决输验证码的烦恼，自动识别；需提前安装油猴（tampermonkey）<blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/432645">https://greasyfork.org/zh-CN/scripts/432645</a></p></blockquote></li></ul><hr><h3 id="我的数字交大"><a href="#我的数字交大" class="headerlink" title="我的数字交大"></a>我的数字交大</h3><ul><li>各种服务事项大多都可以在里面完成，集成度很高，有网页版也有app</li><li>交大V卡、多码合一、出入校申请、体育馆预约、图书馆预约、电子地图、个人收入等，自己探索<blockquote><p><a href="https://my.sjtu.edu.cn/">https://my.sjtu.edu.cn/</a></p></blockquote></li></ul><hr><h3 id="交大柠檬"><a href="#交大柠檬" class="headerlink" title="交大柠檬"></a>交大柠檬</h3><ul><li>非PC网页，微信小程序，交大学生闲置物品交易平台（类似二手交易群）；也可以发个人生活动态（思源湖底）</li><li>微信搜索“交大柠檬”即可</li><li>另一个校内买二手书的微信小程序：知十</li><li>校内买二手书的线下门店：朝花夕拾（南洋南路，棒球场、涵洞附近）</li></ul><hr><h3 id="交大生存手册"><a href="#交大生存手册" class="headerlink" title="交大生存手册"></a>交大生存手册</h3><ul><li>新入学的交大本科生看比较适用，研究生也可以看看</li></ul><blockquote><p><a href="https://survivesjtu.gitbook.io/survivesjtumanual/">https://survivesjtu.gitbook.io/survivesjtumanual/</a></p></blockquote><hr><h3 id="水源社区"><a href="#水源社区" class="headerlink" title="水源社区"></a>水源社区</h3><ul><li>交大人的社区论坛，有一些还不错的帖子（个人常逛）</li></ul><blockquote><p><a href="https://shuiyuan.sjtu.edu.cn/">https://shuiyuan.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="交大财务计划处"><a href="#交大财务计划处" class="headerlink" title="交大财务计划处"></a>交大财务计划处</h3><ul><li>查询自己的工资明细，比“交我办”的详细一些</li></ul><blockquote><p><a href="https://www.jdcw.sjtu.edu.cn/">https://www.jdcw.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="交大学生事务中心"><a href="#交大学生事务中心" class="headerlink" title="交大学生事务中心"></a>交大学生事务中心</h3><ul><li>奖助学金发放公告的地方</li><li>可查看勤工助学、助教工资情况   #22.04.05添加</li></ul><blockquote><p><a href="https://affairs.sjtu.edu.cn/">https://affairs.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="葡萄-校园PT"><a href="#葡萄-校园PT" class="headerlink" title="葡萄 - 校园PT"></a>葡萄 - 校园PT</h3><ul><li>热门影视资源下载，不过不是太活跃，资源做种情况不是很好，热门资源还行</li><li>IPV4和IPV6均可登录，即校内校外均可登录</li><li>建议注册北洋园PT（天津大学PT站），该PT站较活跃，用学校邮箱注册即可</li></ul><blockquote><p><a href="https://pt.sjtu.edu.cn/">https://pt.sjtu.edu.cn/</a></p><p><a href="https://www.tjupt.org/">https://www.tjupt.org/</a>  #北洋园PT</p></blockquote><hr><h3 id="交大云盘"><a href="#交大云盘" class="headerlink" title="交大云盘"></a>交大云盘</h3><ul><li>网页打开，可以找到PC端和手机端软件下载口</li><li>1T空间，上传/下载速度快，可达15MB/s，只能校内使用；校外使用需打开交大VPN（有专门的软件）</li><li>可以使用同步功能，将常用的某个文件夹同步到云盘中，以防丢失，同步到多台电脑</li></ul><blockquote><p><a href="https://jbox.sjtu.edu.cn/">https://jbox.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="交大第二课堂"><a href="#交大第二课堂" class="headerlink" title="交大第二课堂"></a>交大第二课堂</h3><ul><li>部分活动报名的地方，如献血报名，志愿活动报名等，名额需抢，挺激烈的</li></ul><blockquote><p><a href="https://dekt.sjtu.edu.cn/h5/index">https://dekt.sjtu.edu.cn/h5/index</a></p></blockquote><hr><h3 id="上海交通大学网络信息中心"><a href="#上海交通大学网络信息中心" class="headerlink" title="上海交通大学网络信息中心"></a>上海交通大学网络信息中心</h3><ul><li>校园网、交大云盘、正版软件、jCloud云服务、IPV6、邮箱、高性能计算服务；集成度较高</li></ul><blockquote><p><a href="https://net.sjtu.edu.cn/">https://net.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="软件授权中心"><a href="#软件授权中心" class="headerlink" title="软件授权中心"></a>软件授权中心</h3><ul><li>一些工程软件（Endnote、matlab、solidworks、origin等）</li></ul><blockquote><p><a href="https://lic.sjtu.edu.cn/">https://lic.sjtu.edu.cn/</a>  #21.12.24添加</p></blockquote><hr><h3 id="交大邮箱"><a href="#交大邮箱" class="headerlink" title="交大邮箱"></a>交大邮箱</h3><blockquote><p><a href="https://mail.sjtu.edu.cn/">https://mail.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="交大学生网络信息管理部"><a href="#交大学生网络信息管理部" class="headerlink" title="交大学生网络信息管理部"></a>交大学生网络信息管理部</h3><ul><li>含有宿舍安装连接网络教程</li></ul><blockquote><p><a href="https://nimo.sjtu.edu.cn/kaleid/oscope/home/">https://nimo.sjtu.edu.cn/kaleid/oscope/home/</a></p></blockquote><hr><h3 id="交大网络测速"><a href="#交大网络测速" class="headerlink" title="交大网络测速"></a>交大网络测速</h3><ul><li>可以测校园网和寝室里的网络速度和延迟情况</li></ul><blockquote><p><a href="https://speedtest.sjtu.edu.cn/librespeed/">https://speedtest.sjtu.edu.cn/librespeed/</a></p></blockquote><hr><h3 id="交大电子地图"><a href="#交大电子地图" class="headerlink" title="交大电子地图"></a>交大电子地图</h3><blockquote><p><a href="https://map.sjtu.edu.cn/">https://map.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="上海交通大学视觉形象识别系统"><a href="#上海交通大学视觉形象识别系统" class="headerlink" title="上海交通大学视觉形象识别系统"></a>上海交通大学视觉形象识别系统</h3><ul><li>校标下载</li><li>部分PPT模板</li><li>校标放置规范</li></ul><blockquote><p><a href="https://vi.sjtu.edu.cn/index.php/articles/bulletin/13">https://vi.sjtu.edu.cn/index.php/articles/bulletin/13</a></p></blockquote><hr><h3 id="交大Minecraft社团"><a href="#交大Minecraft社团" class="headerlink" title="交大Minecraft社团"></a>交大Minecraft社团</h3><ul><li>交大Minecraft社团，有部分地图，蛮有意思的</li></ul><blockquote><p><a href="https://mc.sjtu.cn/">https://mc.sjtu.cn/</a></p></blockquote><hr><h3 id="交大校医院"><a href="#交大校医院" class="headerlink" title="交大校医院"></a>交大校医院</h3><ul><li>希望大家用不到</li></ul><blockquote><p><a href="https://hospital.sjtu.edu.cn/#/">https://hospital.sjtu.edu.cn/#/</a></p></blockquote><hr><h2 id="学习类"><a href="#学习类" class="headerlink" title="学习类"></a>学习类</h2><h3 id="研究生应用管理平台"><a href="#研究生应用管理平台" class="headerlink" title="研究生应用管理平台"></a>研究生应用管理平台</h3><ul><li>研究生培养方案/计划、选课、成绩、考试查询平台  21.12.25添加</li><li>具体成绩查询：我的学籍–已完成培养计划</li></ul><blockquote><p><a href="http://yjs.sjtu.edu.cn/">http://yjs.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="上海交通大学在线教学平台Canvas"><a href="#上海交通大学在线教学平台Canvas" class="headerlink" title="上海交通大学在线教学平台Canvas"></a>上海交通大学在线教学平台Canvas</h3><ul><li>自己所选课程的课程老师会在上面发布课程相关教学资料，有教学录像回放</li></ul><blockquote><p><a href="https://oc.sjtu.edu.cn/">https://oc.sjtu.edu.cn/</a></p><p><a href="https://umjicanvas.com/courses">https://umjicanvas.com/courses</a>  #密院canvas网址</p><p><a href="https://surviveumji.github.io/SurviveUMJIManual/">https://surviveumji.github.io/SurviveUMJIManual/</a>  #交大密西根学院生存指南 22.06.30添加</p></blockquote><ul><li>有辅助的教学资料下载程序</li></ul><blockquote><p><a href="https://github.com/skyzh/canvas_grab">https://github.com/skyzh/canvas_grab</a></p></blockquote><ul><li>有教学录像倍速播放油猴插件</li></ul><blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/432918">https://greasyfork.org/zh-CN/scripts/432918</a></p><ul><li>最新的插件版本可以退出画中画，可将录屏大小调整至和录像视频一样大小，可随意拖动位置</li><li>倍速播放选择更多 21.12.01添加</li></ul></blockquote><ul><li>有辅助的教学录像下载程序</li></ul><blockquote><p><a href="https://github.com/prcwcy/sjtu-canvas-video-download">https://github.com/prcwcy/sjtu-canvas-video-download</a></p></blockquote><hr><h3 id="交大图书馆"><a href="#交大图书馆" class="headerlink" title="交大图书馆"></a>交大图书馆</h3><ul><li>找书、文献数据库</li><li>有一些以往图书馆开展的讲座培训课件和视频，对更好地使用图书馆资源有一定的帮助</li></ul><blockquote><p><a href="https://www.lib.sjtu.edu.cn/">https://www.lib.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="材料学院"><a href="#材料学院" class="headerlink" title="材料学院"></a>材料学院</h3><blockquote><p><a href="https://smse.sjtu.edu.cn/ggao-list.asp">https://smse.sjtu.edu.cn/ggao-list.asp</a> #通知公告  #22.03.26添加<br><a href="https://smse.sjtu.edu.cn/jiaogongminglu.asp">https://smse.sjtu.edu.cn/jiaogongminglu.asp</a> #教工名录<br><a href="https://smse.sjtu.edu.cn/yanjiushengpeiyang-content.asp?id=496">https://smse.sjtu.edu.cn/yanjiushengpeiyang-content.asp?id=496</a> #研究生课程体系及教学大纲；可查看相关专业课程的教学大纲、考核方式等，以便选课</p></blockquote><hr><h3 id="谷歌、谷歌学术"><a href="#谷歌、谷歌学术" class="headerlink" title="谷歌、谷歌学术"></a>谷歌、谷歌学术</h3><ul><li>PC端连接校园网可直接登录谷歌、谷歌学术</li><li>手机端连接校园网可直接登录谷歌学术，无法登录谷歌</li><li>21.11.29 19:30添加</li></ul><blockquote><p><a href="https://www.google.com/">https://www.google.com</a> #谷歌<br><a href="https://scholar.google.com/">https://scholar.google.com/</a> #谷歌学术</p></blockquote><hr><h3 id="水源文档-协作笔记"><a href="#水源文档-协作笔记" class="headerlink" title="水源文档 - 协作笔记"></a>水源文档 - 协作笔记</h3><ul><li>交大版在线markdown，可在线做笔记，也可协作编辑文档，类似“石墨文档”</li></ul><blockquote><p><a href="https://notes.sjtu.edu.cn/">https://notes.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="高性能计算中心"><a href="#高性能计算中心" class="headerlink" title="高性能计算中心"></a>高性能计算中心</h3><ul><li>学校超算平台，包括arm、$\pi$2.0和思源一号（个人常用）</li></ul><blockquote><p><a href="https://hpc.sjtu.edu.cn/">https://hpc.sjtu.edu.cn/</a>    #21.12.25添加<br><a href="https://status.hpc.sjtu.edu.cn/">https://status.hpc.sjtu.edu.cn/</a> #$\pi 2.0$集群状态查询<br><a href="https://docs.hpc.sjtu.edu.cn/">https://docs.hpc.sjtu.edu.cn/</a>  #上海交大超算平台用户文档  #22.04.02添加<br><a href="https://docs.hpc.sjtu.edu.cn/app/index.html">https://docs.hpc.sjtu.edu.cn/app/index.html</a> #$\pi 2.0$集群软件模块<br><a href="https://docs.hpc.sjtu.edu.cn/app/engineeringscience/vasp.html">https://docs.hpc.sjtu.edu.cn/app/engineeringscience/vasp.html</a>  #$\pi 2.0$集群VASP软件<br><a href="https://docs.hpc.sjtu.edu.cn/app/engineeringscience/lammps.html">https://docs.hpc.sjtu.edu.cn/app/engineeringscience/lammps.html</a>  #$\pi 2.0$集群LAMMPS软件<br><a href="https://docs.hpc.sjtu.edu.cn/job/slurm.html">https://docs.hpc.sjtu.edu.cn/job/slurm.html</a>  #Slurm 作业调度系统</p></blockquote><hr><h3 id="交大机构知识管理服务系统"><a href="#交大机构知识管理服务系统" class="headerlink" title="交大机构知识管理服务系统"></a>交大机构知识管理服务系统</h3><ul><li>将署名单位为交大的论文全部收入到该系统中</li><li>可以更方便、更精准地查阅导师和师兄师姐的论文发布情况（部分最新的论文更新会有些不及时）  21.12.06 添加</li></ul><blockquote><p><a href="http://www.ir.lib.sjtu.edu.cn/">http://www.ir.lib.sjtu.edu.cn/</a></p></blockquote><hr><h3 id="开源软件镜像站"><a href="#开源软件镜像站" class="headerlink" title="开源软件镜像站"></a>开源软件镜像站</h3><ul><li>开源软件下载；conda换源</li></ul><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a> #清华镜像；很全<br><a href="https://mirrors.sjtug.sjtu.edu.cn/">https://mirrors.sjtug.sjtu.edu.cn/</a> #交大镜像；没有清华全；可互补  22.03.26添加</p></blockquote><hr><h3 id="传承·交大"><a href="#传承·交大" class="headerlink" title="传承·交大"></a>传承·交大</h3><ul><li>课程复习资料及往年试题下载，不过不是很多</li><li>本科生课程资料相对多一些，研究生课程资料很少</li><li>咱们可以上传一些自己课程的相关资料，丰富资料内容<blockquote><p><a href="https://share.dyweb.sjtu.cn/">https://share.dyweb.sjtu.cn/</a></p></blockquote></li></ul><hr><h3 id="教材电子书"><a href="#教材电子书" class="headerlink" title="教材电子书"></a>教材电子书</h3><ul><li>部分老的和新的教材电子书供平时参考学习；每次可以打印5页，可以打印部分对自己有用的章节<blockquote><p><a href="http://jcft.lib.sjtu.edu.cn:9088/">http://jcft.lib.sjtu.edu.cn:9088/</a></p></blockquote></li></ul><hr><h3 id="交大学位论文系统"><a href="#交大学位论文系统" class="headerlink" title="交大学位论文系统"></a>交大学位论文系统</h3><ul><li>可查询感兴趣的交大学位论文及导师带过的师兄师姐的毕业学位论文<blockquote><p><a href="http://thesis.lib.sjtu.edu.cn/">http://thesis.lib.sjtu.edu.cn/</a></p></blockquote></li></ul><hr><h3 id="交大教学信息楼发布系统"><a href="#交大教学信息楼发布系统" class="headerlink" title="交大教学信息楼发布系统"></a>交大教学信息楼发布系统</h3><ul><li>可查询教学楼教室使用情况、要上的课及感兴趣或想蹭的课的课程信息<blockquote><p><a href="https://ids.sjtu.edu.cn/">https://ids.sjtu.edu.cn/</a></p></blockquote></li></ul><hr><h3 id="交大在线LaTeX编辑器"><a href="#交大在线LaTeX编辑器" class="headerlink" title="交大在线LaTeX编辑器"></a>交大在线LaTeX编辑器</h3><ul><li>交大版overleaf，在线latex编辑器，可做笔记、撰写论文<blockquote><p><a href="https://latex.sjtu.edu.cn/">https://latex.sjtu.edu.cn/</a></p></blockquote></li></ul><hr><h3 id="交大Beamer模板"><a href="#交大Beamer模板" class="headerlink" title="交大Beamer模板"></a>交大Beamer模板</h3><ul><li>用latex写的Beamer（PPT）模板<blockquote><p><a href="https://github.com/sjtug/SJTUBeamer">https://github.com/sjtug/SJTUBeamer</a></p></blockquote></li></ul><hr><h3 id="交大论文模板"><a href="#交大论文模板" class="headerlink" title="交大论文模板"></a>交大论文模板</h3><ul><li>用latex写的论文模板<blockquote><p><a href="https://github.com/sjtug/SJTUThesis">https://github.com/sjtug/SJTUThesis</a></p></blockquote></li></ul><hr><h3 id="SJTU选课社区"><a href="#SJTU选课社区" class="headerlink" title="SJTU选课社区"></a>SJTU选课社区</h3><ul><li>交大所有本科生课程的课程点评，选课参考；咱研究生可以根据这个去蹭有用的课<blockquote><p><a href="https://course.sjtu.plus/">https://course.sjtu.plus/</a></p></blockquote></li></ul><hr><h3 id="交大学期开课和虚拟课表"><a href="#交大学期开课和虚拟课表" class="headerlink" title="交大学期开课和虚拟课表"></a>交大学期开课和虚拟课表</h3><ul><li>本科生学期开课和虚拟课表和常用网址导航<blockquote><p><a href="https://plus.sjtu.edu.cn/">https://plus.sjtu.edu.cn/</a></p></blockquote></li></ul><hr><h3 id="上海交通大学开发者平台"><a href="#上海交通大学开发者平台" class="headerlink" title="上海交通大学开发者平台"></a>上海交通大学开发者平台</h3><ul><li>有开放API，可以获取部分网页的数据资源（应该是，还不太会用）</li></ul><blockquote><p><a href="https://developer.sjtu.edu.cn/">https://developer.sjtu.edu.cn/</a>  #22.09.12添加</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究生生活 </tag>
            
            <tag> 研究生学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交大材料学院研究生课程选课指北</title>
      <link href="/posts/11143.html"/>
      <url>/posts/11143.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="交大材料学院研究生课程选课指北"><a href="#交大材料学院研究生课程选课指北" class="headerlink" title="交大材料学院研究生课程选课指北"></a>交大材料学院研究生课程选课指北</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>写它的原因主要是目前还没有材院的研究生同学整理过这方面的内容（应该是吧），师弟师妹们选课也还是需要向同门师兄姐询问相关课程情况；整理自己上过的课（及听说过的一些课）并写上一些感受，应该可以在一定程度上减轻师弟师妹们的课程选择困难。</p><p>课程的相关指标有：</p><ul><li>学分</li><li>任课教师（公共基础课会有不同的老师授课，其授课风格、作业量、给分情况各异）</li><li>课程内容</li><li>考核方式</li><li>个人评价</li><li>给分情况</li><li>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>（总数目为5，应该都懂啥意思吧）</li></ul><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i>   选课的个人总体感受：</div><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> 1 研究生课程质量良莠不齐，选择两三门自己感兴趣或有用的课程就好，其他课程，哪个含水量高，就尽量选哪个吧，凑够毕业要求的所需学分数就好（个人看法！个人看法！努力认真的师弟师妹还是不要听我这种发言），腾出些时间入门自己的课题，学习学习之后要用到的科研工具，比选的课程教授的东西要更受用的多（纯粹发呆也好，毕竟上课发呆的时间也不多了）。</div><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> 2 硕士评奖学金有GPA要求，因此，还需要考虑下课程难度，以免课程低分出现，也可以适当调整所选课程是否计入GPA，尽量把自己的GPA提上去。</div><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> 3 博士评奖学金没有GPA要求，但变成了论文，并且是所有年级的博士生一起评，低年级博士生几乎没希望；博士选课的自由度比硕士大一些。</div><p>希望能对师弟师妹们有用。</p><p>注：</p><ul><li><p>下面涉及到的评价大多都是个人主观感受，还需自己结合自己课题、兴趣、时间规划及课程是否冲突等方面仔细考虑</p></li><li><p>部分课程我没上过，但听过部分风评（<strong>听说、未知等字眼</strong>），<strong>不一定保真，建议还是多问问</strong></p></li><li><p>还有很多我下面没有提到过的课程，这些课程就还需自己向同门师兄姐请教了</p></li></ul><blockquote><p>查看材料学院研究生课程教学大纲网址：</p><p><a href="https://smse.sjtu.edu.cn/yanjiushengpeiyang-content.asp?id=496">https://smse.sjtu.edu.cn/yanjiushengpeiyang-content.asp?id=496</a></p></blockquote><ul><li>这篇推送/博客还是不要让老师们看见为好，懂的都懂</li></ul><hr><h2 id="公共基础课"><a href="#公共基础课" class="headerlink" title="公共基础课"></a>公共基础课</h2><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 注：公共基础课的学术英语比较难抢，注意把握</div><h3 id="中国马克思主义与当代"><a href="#中国马克思主义与当代" class="headerlink" title="中国马克思主义与当代"></a>中国马克思主义与当代</h3><p>学分：2</p><p>任课教师：刘铮（<strong>建议选这位老师</strong>）</p><p>课程内容：看课程题目便知</p><p>考核方式：报告+闭卷考试</p><p>个人评价：刘铮这位老师讲课蛮有意思</p><p>给分情况：给分较友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="自然辩证法概论"><a href="#自然辩证法概论" class="headerlink" title="自然辩证法概论"></a>自然辩证法概论</h3><p>学分：1</p><p>任课教师：王延锋</p><p>课程内容：看课程题目便知</p><p>考核方式：闭卷考试</p><p>个人评价：回答问题会有加分，所以同学回答问题蛮积极（<strong>仅限我上的这位老师的课</strong>）；考试的选择题很坑</p><p>给分情况：给分客观</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="学术伦理、规范与写作"><a href="#学术伦理、规范与写作" class="headerlink" title="学术伦理、规范与写作"></a>学术伦理、规范与写作</h3><p>学分：1</p><p>任课教师：魏天然（<strong>可以选这位老师</strong>）</p><p>课程内容：看课程题目便知</p><p>考核方式：平时作业+小组pre</p><p>个人评价：老师讲这部分的内容案例还是挺多的；<strong>互动较多（点人回答问题）</strong>；老师厉害（优青）</p><p>给分情况：给分客观</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="学术英语"><a href="#学术英语" class="headerlink" title="学术英语"></a>学术英语</h3><p>学分：2</p><p>任课教师：郭芳威（<strong>不是太建议选这位老师，个人看法</strong>）</p><p>课程内容：英文论文写作相关的内容</p><p>考核方式：平时作业（pre较多）+课题相关pre</p><p>个人评价：主要还是中文授课；其实感觉用处不大，到了该写英文论文的时候，自己会自动深入了解并注意的；<strong>做pre次数较多，点人回答问题；pre做的不认真会从某些角度cue你，会有些让你感到不是很舒服；最后的给分很严格</strong></p><p>给分情况：给分客观</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><hr><h2 id="专业基础课"><a href="#专业基础课" class="headerlink" title="专业基础课"></a>专业基础课</h2><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 注：专业基础课的数学课比较难抢，注意把握；含水量高的课比较难抢，注意把握</div><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 注：致远博士需选择两门数学课，非致远博士和硕士只需选择一门就好，若是有精力或感兴趣可以多选择一门</div><h3 id="最优化方法"><a href="#最优化方法" class="headerlink" title="最优化方法"></a>最优化方法</h3><p>学分：3</p><p>任课教师：杨志国（<strong>推荐选这位老师、每节课都板书</strong>）</p><p>课程内容：线性规划、最优性条件、无约束优化及约束优化问题的相关算法</p><p>考核方式：平时作业+大作业+闭卷考试</p><p>给分情况：给分友好</p><p>个人评价：杨志国老师讲解课程内容知识很细致，最后的复习课复习得也很细致；考试难度也不难（仅限我考的那一次，仅供参考）；很多程序的算法（机器学习）涉及到这门课的一些知识和算法，有助于你对它的理解；<strong>最优化方法和计算方法这两门数学课二选一的话，建议选这门，或者把这门课计入GPA，计算方法不计，毕竟它给分友好。</strong></p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="计算方法"><a href="#计算方法" class="headerlink" title="计算方法"></a>计算方法</h3><p>学分：3</p><p>任课教师：李大明（<strong>不建议选这位老师</strong>）</p><p>课程内容：插值、函数逼近、数值积分微分、常微分方程数值解法、方程求根、线性方程组解法（直接解法+迭代法）、矩阵特征值与特征向量计算</p><p>考核方式：平时作业+大作业+闭卷考试</p><p>给分情况：给分客观</p><p>个人评价：课程内容也还是蛮有用的（机器学习会用到相关概念）；<strong>李大明老师的授课方式（对着PPT讲，很少板书）让人听得云里雾里；考试难度偏难（计算量有些大）</strong></p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="多尺度材料模拟与计算"><a href="#多尺度材料模拟与计算" class="headerlink" title="多尺度材料模拟与计算"></a>多尺度材料模拟与计算</h3><p>学分：3</p><p>任课教师：孔令体+刘桂森；英文授课（<strong>2022年秋季开始会有中文班授课</strong>）</p><p>课程内容：第一性原理（程序：VASP）+分子动力学（程序：LAMMPS）</p><p>考核方式：平时作业（主要为实验报告；实验内容相比其他课程可能偏多）+开卷考试（2021年秋季开始的）</p><p>个人评价：做模拟计算的学生必选的课（我所在的课题组）；课程内容本身很硬核，加上英文授课，更难听懂了；<strong>好消息是，听说2022年秋季开始会有中文班授课，尽量选到中文班的，没选上也可以去那个班蹭课；无论如何都会给你后续做模拟计算打下一定的基础，建议选上</strong></p><p>给分情况：给分客观</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="高等材料热力学-中文班"><a href="#高等材料热力学-中文班" class="headerlink" title="高等材料热力学 - 中文班"></a>高等材料热力学 - 中文班</h3><p>学分：3</p><p>任课教师：金学军+李伟</p><p>课程内容：热力学（前者教授）、统计热力学（后者教授）</p><p>考核方式：平时作业+1次实验报告+1次pre+开卷考试</p><p>个人评价：<strong>课程内容和本科内容重合还是蛮多的（如果你上过《材科基》和《统计物理》的话）</strong>，有些概念是本科没有讲到的；搞金属或相关方面基础理论的可以选上这门课；<strong>两位老师喜欢点人回答问题</strong>，金学军老师讲解的部分还行，后一位老师，emm…，喜欢板书（背对着学生，誊自己笔记本的内容）；<strong>最后的开卷考试难度还行；早八的课，一周两次（早起困难户应该会介意）</strong></p><p>给分情况：给分友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="材料强度学"><a href="#材料强度学" class="headerlink" title="材料强度学"></a>材料强度学</h3><p>学分：3</p><p>任课教师：沈耀+张帆</p><p>课程内容：弹性力学、位错理论、塑性变形、强化；断裂与韧化相关理论</p><p>考核方式：平时作业+开卷考试（2021年秋季开始的）</p><p>个人评价：<strong>课程内容和本科内容重合还是蛮多的（如果你上过《材科基》和《材料力学行为》的话）</strong>；<strong>做力学性能相关的同学可以选上这门课</strong>；<strong>几乎每周都会有作业，最后的考试难度还行</strong>；沈耀老师讲解的部分还是不错的，后一位老师个人觉得一般</p><p>给分情况：给分友好（个人感觉）</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="材料加工智能制造"><a href="#材料加工智能制造" class="headerlink" title="材料加工智能制造"></a>材料加工智能制造</h3><p>学分：3</p><p>任课教师：蔡艳</p><p>课程内容：未知</p><p>考核方式：开卷考试（<strong>好像是</strong>）</p><p>个人评价：听上过这门课的同学说这课偏水，可以选上（<strong>听说</strong>）</p><p>给分情况：给分友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="机器学习-电院课程"><a href="#机器学习-电院课程" class="headerlink" title="机器学习 - 电院课程"></a>机器学习 - 电院课程</h3><p>学分：3</p><p>任课教师：杨旸（电院老师）</p><p>课程内容：讲解机器学习涉及到的方法（回归、贝叶斯、聚类、决策树等）及原理</p><p>考核方式：实验报告+闭卷考试</p><p>个人评价：相比材院的涉及机器学习的课程，十分硬核；<strong>对机器学习感兴趣的同学可以去蹭课</strong></p><p>给分情况：未知</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="其他课程"><a href="#其他课程" class="headerlink" title="其他课程"></a>其他课程</h3><ul><li>数学课：<strong>听说</strong>《矩阵理论》也比较硬核；<strong>《应用随机过程》《数学物理方程》《基础数理统计》《生物数学》这四门难度相比前三者应该小一些</strong></li><li>《固态相变原理》《材料动力学》：<strong>听说</strong>课程压力较大，不太建议选</li><li>《显微学与谱学表征》《工程材料的断裂机理》：<strong>听说</strong>课程压力较小，建议选</li></ul><hr><h2 id="专业选修课"><a href="#专业选修课" class="headerlink" title="专业选修课"></a>专业选修课</h2><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 注：专业选修课中含水量高的课程比较难抢，注意把握</div><h3 id="材料信息学-材料中的大数据与机器学习"><a href="#材料信息学-材料中的大数据与机器学习" class="headerlink" title="材料信息学 - 材料中的大数据与机器学习"></a>材料信息学 - 材料中的大数据与机器学习</h3><p>学分：3</p><p>任课教师：汪洪+张澜庭+鞠生宏</p><p>课程内容：高通量实验、计算；机器学习（概念为主，辅以部分实操）</p><p>考核方式：平时作业（主要为实验报告）+期中闭卷考试+期末开卷考试（只允许带一张A4纸）</p><p>个人评价：高通量实验、计算听起来高大上，其实蛮难实现的，<strong>这部分由汪洪+张澜庭两位老师讲，讲得一般</strong>；机器学习部分由鞠生宏讲，但基本也是快速过一遍scikit-learn中的主要算法，<strong>算法原理部分讲得不是很深入，想深入了解还需自己花时间看官方文档和源码</strong>；<strong>作为选修课，这门课的作业量（还有考试）算是很多了，建议感兴趣的同学选择，不是太感兴趣的同学慎重。</strong></p><p>给分情况：给分客观</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="集成计算机材料工程"><a href="#集成计算机材料工程" class="headerlink" title="集成计算机材料工程"></a>集成计算机材料工程</h3><p>学分：2</p><p>任课教师：顾剑锋+刘晓辉</p><p>课程内容：金属热加工模拟流程与相关的原理</p><p>考核方式：与课程相关且自己课题相关的pre</p><p>个人评价：老师想讲的内容很多，但都讲得很笼统；<strong>做热加工模拟的同学可以选择</strong></p><p>给分情况：给分友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="块体金属玻璃与高熵合金"><a href="#块体金属玻璃与高熵合金" class="headerlink" title="块体金属玻璃与高熵合金"></a>块体金属玻璃与高熵合金</h3><p>学分：2</p><p>任课教师：李金富</p><p>课程内容：金属玻璃部分的相关热力学知识+高熵合金（学生做pre）</p><p>考核方式：老师给高熵合金部分的选题，自己选择一个题目做相关的pre+报告</p><p>个人评价：搞非晶合金和高熵合金的同学可以选择</p><p>给分情况：给分友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="材料科学与工程前沿专题"><a href="#材料科学与工程前沿专题" class="headerlink" title="材料科学与工程前沿专题"></a>材料科学与工程前沿专题</h3><p>学分：2</p><p>任课教师：金学军+肖飞</p><p>课程内容：每周老师会发布这周可以听的讲座信息（听6次讲座即可），也可以听其他相关的</p><p>考核方式：写一份自己听过的讲座记录报告（两次讲座的内容即可）；会组织一次面试，问你听过的讲座相关问题</p><p>个人评价：<strong>很轻松的一门课，只需听讲座，简单做些记录即可，不过很多讲座可能并不太和自己的课题有关</strong></p><p>给分情况：给分友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="测试数据智能挖掘"><a href="#测试数据智能挖掘" class="headerlink" title="测试数据智能挖掘"></a>测试数据智能挖掘</h3><p>学分：2</p><p>任课教师：蔡艳</p><p>课程内容：LabVIEW+机器学习（粗略讲）</p><p>考核方式：平时作业+老师给定题目和数据（<strong>焊接相关</strong>），自己建立模型实现并做pre</p><p>个人评价：《材料加工智能制造》课程的延伸；<strong>最后的pre说难也不难，老师人蛮好的，把题目做了就行，效果如何没有要求</strong></p><p>给分情况：给分友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="高能束成形原理、工艺和装备"><a href="#高能束成形原理、工艺和装备" class="headerlink" title="高能束成形原理、工艺和装备"></a>高能束成形原理、工艺和装备</h3><p>学分：2</p><p>任课教师：王洪泽+吴一</p><p>课程内容：高能束成形原理、工艺和相关应用</p><p>考核方式：几乎没有平时作业+写一份高能束相关领域新应用场景的报告并做pre</p><p>个人评价：总体也还蛮轻松</p><p>给分情况：给分客观</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="分子模拟的理论与实践-化院课程"><a href="#分子模拟的理论与实践-化院课程" class="headerlink" title="分子模拟的理论与实践 - 化院课程"></a>分子模拟的理论与实践 - 化院课程</h3><p>学分：2</p><p>任课教师：化院老师</p><p>课程内容：有高斯（第一性原理）、gromacs、hoomd（后两个为分子动力学）软件的实操</p><p>考核方式：未知</p><p>个人评价：听师兄说这位老师讲得还不错，对这方面感兴趣或课题相关的同学可以去蹭课</p><p>给分情况：未知</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="其他课程-1"><a href="#其他课程-1" class="headerlink" title="其他课程"></a>其他课程</h3><ul><li>《现代微电子封装材料及封装技术》：<strong>听说</strong>课程压力小，建议选</li></ul><hr><h2 id="专业前沿课"><a href="#专业前沿课" class="headerlink" title="专业前沿课"></a>专业前沿课</h2><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 注：专业前沿课中含水量高的课程比较难抢，注意把握</div><h3 id="光电器件与系统"><a href="#光电器件与系统" class="headerlink" title="光电器件与系统"></a>光电器件与系统</h3><p>学分：2</p><p>任课教师：高立明</p><p>课程内容：光电器件与系统的相关概念（<strong>每节课大部分时间在扯皮</strong>）</p><p>考核方式：几乎没有平时作业+做和课程内容相关的pre（要求包含三篇较新的文献，串起来讲）</p><p>个人评价：<strong>老师喜欢扯来扯去，没有啥干货；每节课会点名，点人回答问题，要求在课堂上不能做其他事（被他发现会当场批评你），就当去放松好了</strong></p><p>给分情况：给分友好</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="现代物理与天文专题（天文类）-恒星与星系"><a href="#现代物理与天文专题（天文类）-恒星与星系" class="headerlink" title="现代物理与天文专题（天文类）- 恒星与星系"></a>现代物理与天文专题（天文类）- 恒星与星系</h3><h3 id="现代物理与天文专题（天文类）-宇宙学"><a href="#现代物理与天文专题（天文类）-宇宙学" class="headerlink" title="现代物理与天文专题（天文类）- 宇宙学"></a>现代物理与天文专题（天文类）- 宇宙学</h3><p>学分：0.5</p><p>任课教师：物院老师（这两门课同一老师负责）</p><p>课程内容：看课程题目便知</p><p>考核方式：写一份课程相关的报告</p><p>个人评价：拓展见闻、放松；报告两页纸即可，有查重要求</p><p>给分情况：pass/fail</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h3 id="材料表面与界面"><a href="#材料表面与界面" class="headerlink" title="材料表面与界面"></a>材料表面与界面</h3><p>学分：2</p><p>任课教师：未知</p><p>课程内容：未知</p><p>考核方式：交一份课程相关的报告就行？（<strong>听说</strong>）</p><p>个人评价：听说蛮水？（<strong>听说</strong>）</p><p>给分情况：未知</p><p>含水量：<span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>💦</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研究生课程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用smms的api编写Python脚本实现自动上传图片并获取链接</title>
      <link href="/posts/16240.html"/>
      <url>/posts/16240.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="使用smms的api编写Python脚本实现自动上传图片并获取链接"><a href="#使用smms的api编写Python脚本实现自动上传图片并获取链接" class="headerlink" title="使用smms的api编写Python脚本实现自动上传图片并获取链接"></a>使用smms的api编写Python脚本实现自动上传图片并获取链接</h1><p>smms是另一个常用的图床，博主一般用smms上传影视截图，github图床用来上传博客中需要用到的图片。</p><p>smms域名为：</p><blockquote><p><a href="https://sm.ms/">https://sm.ms/</a></p></blockquote><p>不过最近这个域名在国内被墙了，其备用域名为：</p><blockquote><p><a href="https://smms.app/">https://smms.app</a></p><p>参考链接：<a href="https://github.com/Molunerfinn/PicGo/issues/963">https://github.com/Molunerfinn/PicGo/issues/963</a></p></blockquote><h2 id="smms在Typora或VSCode中的配置"><a href="#smms在Typora或VSCode中的配置" class="headerlink" title="smms在Typora或VSCode中的配置"></a>smms在Typora或VSCode中的配置</h2><p>smms和github图床一样，也可以和PicGo/PicGo-Core一起在Typora或VSCode中实现图片的自动上传。不过其配置简单很多，只需注册smms，获取token。</p><p>其在Typora中的json配置为：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"picBed"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"current"</span><span class="token operator">:</span> <span class="token string">"smms"</span><span class="token punctuation">,</span> <span class="token comment">// 代表当前的默认上传图床为 SM.MS</span>    <span class="token property">"smms"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">""</span> <span class="token comment">//这里是你的 SM.MS 账号的 API Token</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"picgoPlugins"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在VSCode中的设置几乎和Typora中的json配置一样。</p><h2 id="Python脚本实现自动上传图片并获取链接"><a href="#Python脚本实现自动上传图片并获取链接" class="headerlink" title="Python脚本实现自动上传图片并获取链接"></a>Python脚本实现自动上传图片并获取链接</h2><p>登录smms后，你可以点击API DOC选项栏，查看调用smms api的方式。</p><p>smms的api链接格式为<code>https://sm.ms/api/v2/</code>或<code>https://smms.app/api/v2/</code>，一般只需用到<code>upload</code>（上传图片）和<code>getHistory</code>（获取上传图片历史）两个参数，因此只需编写这两个函数即可。</p><p>编写Python脚本主要用来批量上传图片，算是一种偷懒的方式吧<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>脚本内容如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> os<span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span><span class="token comment"># smms.app api configuration</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Authorization'</span><span class="token punctuation">:</span> <span class="token string">'xxx'</span><span class="token punctuation">}</span>  <span class="token comment"># smms.app</span><span class="token comment"># 若你电脑端在使用VPN，一般代理proxies需要设置一下</span>proxies <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">"http"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">"https"</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">}</span>  <span class="token comment"># 方式1，设置成None</span><span class="token comment"># 方式2，找到你VPN的代理ip和端口，不过不一定有用，方式1更有用一些</span><span class="token comment"># proxies = { "http": "http://your VPN proxy ip:your VPN proxy port", "https": "https://your VPN proxy ip:your VPN proxy port"}</span>smms_api_url <span class="token operator">=</span> <span class="token string">'https://smms.app/api/v2/'</span><span class="token comment"># smms api configuration</span><span class="token comment"># headers = {'Authorization': 'jy5oSw3Ug61FVYMMw61wD6Koga72StRT'}  # sm.ms</span><span class="token comment"># smms_api_url = 'https://sm.ms/api/v2/'  # sm.ms</span><span class="token comment"># image path, 可修改项</span>dir_path <span class="token operator">=</span> <span class="token string">r'your image path'</span><span class="token comment"># flag标志, 可修改项</span><span class="token comment"># flag = 0  # 获取已上传图片BBCode,默认取最后三张图片的</span>flag <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># 上传图片并获取其BBCode</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> upload<span class="token operator">=</span><span class="token string">'upload'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    files <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'smfile'</span><span class="token punctuation">:</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    url <span class="token operator">=</span> smms_api_url <span class="token operator">+</span> upload    requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">getHistory</span><span class="token punctuation">(</span>img_number<span class="token operator">=</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> history<span class="token operator">=</span><span class="token string">'upload_history'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> smms_api_url <span class="token operator">+</span> history    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> res<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>    <span class="token comment"># 影视截图一般上传3张即可</span>    res <span class="token operator">=</span> res<span class="token punctuation">[</span>img_number<span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment"># res = res[:]['filename']</span>    <span class="token keyword">for</span> res_item <span class="token keyword">in</span> res<span class="token punctuation">:</span>        item_url <span class="token operator">=</span> res_item<span class="token punctuation">[</span><span class="token string">'url'</span><span class="token punctuation">]</span>    <span class="token comment">#     item_time = res_item['created_at']</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[img]</span><span class="token interpolation"><span class="token punctuation">{</span>item_url<span class="token punctuation">}</span></span><span class="token string">[/img]"</span></span><span class="token punctuation">)</span>  <span class="token comment">#图片链接的BBCode形式</span><span class="token keyword">def</span> <span class="token function">get_image_path</span><span class="token punctuation">(</span>dirpath<span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>dirpath<span class="token punctuation">)</span>  <span class="token comment"># 切换到图片路径</span>    <span class="token comment"># 获取图片路径下的图片列表</span>    file_list <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> x<span class="token operator">+</span>y<span class="token punctuation">,</span> <span class="token punctuation">[</span>files <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>dir_path<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> file_list<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> flag<span class="token punctuation">:</span>  <span class="token comment"># 上传图片并获取其BBCode</span>        n <span class="token operator">=</span> <span class="token number">0</span>        files <span class="token operator">=</span> get_image_path<span class="token punctuation">(</span>dir_path<span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>            n <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token builtin">file</span> <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dir_path<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span>            upload<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Image </span><span class="token interpolation"><span class="token punctuation">{</span>n<span class="token punctuation">}</span></span><span class="token string"> upload is done!'</span></span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"All </span><span class="token interpolation"><span class="token punctuation">{</span>n<span class="token punctuation">}</span></span><span class="token string"> images are uploaded! "</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------------------------------------"</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"The BBCode of uploaded images are: "</span><span class="token punctuation">)</span>        getHistory<span class="token punctuation">(</span><span class="token operator">-</span>n<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># 获取已上传图片BBCode,默认取最后三张图片的</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"The BBCode of selected images are: "</span><span class="token punctuation">)</span>        getHistory<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
          <category> 实用脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> smms </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给没有目录/书签的电子书pdf生成目录/书签</title>
      <link href="/posts/19687.html"/>
      <url>/posts/19687.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="给没有目录-x2F-书签的电子书pdf生成目录-x2F-书签"><a href="#给没有目录-x2F-书签的电子书pdf生成目录-x2F-书签" class="headerlink" title="给没有目录/书签的电子书pdf生成目录/书签"></a>给没有目录/书签的电子书pdf生成目录/书签</h1><p>买不起纸质版书籍，而是经常下载电子书的小伙伴应该会不时遇到下载的版本没有目录/书签的问题，电子书没有目录/书签还是蛮令人头疼的，自己一个一个弄着实累人。最近在github上发现了一个可以为其生成目录/书签的工具，还蛮实用。该仓库的README文档中有较为详细的操作介绍，在这就不重新赘述了。</p><blockquote><p>参考链接：</p><p><a href="https://yafine-blog.cn/posts/b251.html">https://yafine-blog.cn/posts/b251.html</a></p><p><a href="https://github.com/ifnoelse/pdf-bookmark">https://github.com/ifnoelse/pdf-bookmark</a></p></blockquote><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 生成目录内容的时候，中文可能会出现乱码的情况，这时可以直接将china-pub中书籍详情页完整目录复制到pdf-bookmark目录编辑框中。</div><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 电子书的目录可以在京东、当当、读秀、图书馆联盟、豆瓣图书中找到并复制过来，但需带页码的。</div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 实用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电子书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PicGo-Core/PicGo + github搭建免费图床并在Typora/VSCode写作中自动上传图片</title>
      <link href="/posts/7877.html"/>
      <url>/posts/7877.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="使用PicGo-Core-x2F-PicGo-github搭建免费图床在Typora-x2F-VSCode写作中自动上传图片"><a href="#使用PicGo-Core-x2F-PicGo-github搭建免费图床在Typora-x2F-VSCode写作中自动上传图片" class="headerlink" title="使用PicGo-Core/PicGo + github搭建免费图床在Typora/VSCode写作中自动上传图片"></a>使用PicGo-Core/PicGo + github搭建免费图床在Typora/VSCode写作中自动上传图片</h1><h2 id="使用PicGo-github搭建免费图床"><a href="#使用PicGo-github搭建免费图床" class="headerlink" title="使用PicGo + github搭建免费图床"></a>使用PicGo + github搭建免费图床</h2><p>主要流程：</p><ul><li>创建存储上传图片的仓库</li><li>生成一个token，用于PicGo访问github</li><li>下载PicGo，配置github图床</li></ul><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> 配置github图床时，自定义分支填master，自定义域名填写CDN加速形式的url</div><blockquote><p>参考链接：</p><p><a href="https://zhuanlan.zhihu.com/p/489236769">https://zhuanlan.zhihu.com/p/489236769</a></p><p><a href="https://yafine-blog.cn/posts/eb3a.html">https://yafine-blog.cn/posts/eb3a.html</a></p></blockquote><h2 id="使用PicGo-Core在Typora写作中自动上传图片"><a href="#使用PicGo-Core在Typora写作中自动上传图片" class="headerlink" title="使用PicGo-Core在Typora写作中自动上传图片"></a>使用PicGo-Core在Typora写作中自动上传图片</h2><p>主要流程：</p><ul><li>配置Typora图片上传服务设定（上传服务选择PicGo-Core，也可以选择PicGo(app)）</li><li>填写配置json文件</li></ul><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 利用github搭建的图床时，图片重名会无法上传，需要用到rename-file插件（npm安装，npm安装package需要先安装node.js）</div><p>Typora + github + PicGo-Core + rename-file插件，json配置</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"picBed"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"current"</span><span class="token operator">:</span> <span class="token string">"github"</span><span class="token punctuation">,</span>    <span class="token property">"github"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"repo"</span><span class="token operator">:</span> <span class="token string">"username/repo"</span><span class="token punctuation">,</span>      <span class="token property">"branch"</span><span class="token operator">:</span> <span class="token string">"master"</span><span class="token punctuation">,</span>      <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">"xxxx"</span><span class="token punctuation">,</span>      <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"images/"</span><span class="token punctuation">,</span>      <span class="token property">"customUrl"</span><span class="token operator">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/username/repo"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"picgoPlugins"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"picgo-plugin-rename-file"</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"picgo-plugin-rename-file"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"format"</span><span class="token operator">:</span> <span class="token string">"{y}-{m}-{d}-{rand}-{origin}"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> `picgo-plugin-rename-file`的`format`是图片重命名的格式</div><blockquote><p>参考链接：</p><p>PicGo软件下载地址：<a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></p><p>使用PicGo-Core将Github作为Typora的图床：<a href="https://blog.csdn.net/qq_42940160/article/details/120924588">https://blog.csdn.net/qq_42940160/article/details/120924588</a></p><p>内含rename-file插件重命名格式介绍：<a href="https://www.cnblogs.com/qmgta/p/16269578.html">https://www.cnblogs.com/qmgta/p/16269578.html</a></p><p>内含rename-file插件在json文件中的写法：<a href="https://jtxiao.com/main/posts/typora-pic-go-%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/">https://jtxiao.com/main/posts/typora-pic-go-插件的使用/</a></p></blockquote><h2 id="使用PicGo插件在VSCode写作中自动上传图片"><a href="#使用PicGo插件在VSCode写作中自动上传图片" class="headerlink" title="使用PicGo插件在VSCode写作中自动上传图片"></a>使用PicGo插件在VSCode写作中自动上传图片</h2><p>主要流程</p><ul><li>在VSCode的扩展商店中下载PicGo插件</li><li>在VSCode的设置中搜索PicGo，填写github图床设置，需要填写的内容几乎和第一步相同</li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>在Typora写作中自动上传图片（鼠标右键该图片，选择“复制图片链接”，可以看到该图片的链接）</p><p><img src="https://cdn.jsdelivr.net/gh/Bit-Part-Young/BTY-imgs/images/2022-08-29-d0f250-MjlUB.png"></p><p>该图片生成的链接格式为：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">https://cdn.jsdelivr.net/gh/username/repo/images/2022-08-29-d0f250-MjlUB.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中<code>2022-08-29-d0f250-MjlUB.png</code>是重命名后的文件名称</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
            <tag> Typora </tag>
            
            <tag> github </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FFmpeg+Shell批量图片转gif</title>
      <link href="/posts/36354.html"/>
      <url>/posts/36354.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="FFmpeg-Shell批量图片转gif"><a href="#FFmpeg-Shell批量图片转gif" class="headerlink" title="FFmpeg+Shell批量图片转gif"></a>FFmpeg+Shell批量图片转gif</h1><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i>  注： </div><ul><li>该内容技术含量不高，仅为自己的学习记录</li><li>以下批量操作也可以写bat批处理文件（自己还不会）</li><li>实现以下的操作需掌握的一些东西<ul><li>在windows或linux系统下安装FFmpeg；windows下写入环境变量</li><li>windows上使用Shell命令可以安装Git，之后在cmd中输入sh，进入bash环境；linux系统可直接操作</li><li>一些Shell命令：for循环，dirname、basename，变量，mkdir</li></ul></li></ul><h2 id="最简单的一张图片转gif，并控制像素大小"><a href="#最简单的一张图片转gif，并控制像素大小" class="headerlink" title="最简单的一张图片转gif，并控制像素大小"></a>最简单的一张图片转gif，并控制像素大小</h2><blockquote><p>在cmd中操作即可</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ffmpeg -f image2 -i <span class="token number">1</span>.jpg <span class="token number">1</span>.gifffmpeg -f image2 -i -vf <span class="token assign-left variable">scale</span><span class="token operator">=</span>531x299 <span class="token number">1</span>.jpg <span class="token number">1</span>.gif <span class="token comment"># scale 控制像素大小</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="批量图片转gif"><a href="#批量图片转gif" class="headerlink" title="批量图片转gif"></a>批量图片转gif</h2><h3 id="方式1-多张图片转一张gif"><a href="#方式1-多张图片转一张gif" class="headerlink" title="方式1 多张图片转一张gif"></a>方式1 多张图片转一张gif</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将1_1.jpg这种形式的多个文件以每秒1张的帧率转换成一张gif</span><span class="token comment"># %后面的1个d表示一位数，按序号排列；2d表示01，02这种</span>ffmpeg -r <span class="token number">1</span> -f image2 -i 1_%d.jpg  out.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>以下的方式为多张图片批量转换成多张gif；需进入bash或sh环境下；</p></blockquote><h3 id="方式2"><a href="#方式2" class="headerlink" title="方式2"></a>方式2</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 对文件夹下的部分jpg格式图片</span><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">..</span><span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span> ffmpeg -f image2 -i <span class="token variable">${i}</span>.jpg out1_<span class="token variable">${i}</span>.gif<span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="方式3"><a href="#方式3" class="headerlink" title="方式3"></a>方式3</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 对文件夹下的所有jpg格式图片</span><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> *.jpg<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> <span class="token string">"<span class="token variable">${i}</span>"</span><span class="token variable">)</span></span><span class="token punctuation">;</span> ffmpeg -f image2 -i <span class="token variable">${i}</span> <span class="token variable">$D</span>/<span class="token variable">${B<span class="token operator">%</span>.*}</span>.gif<span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="方式4"><a href="#方式4" class="headerlink" title="方式4"></a>方式4</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 把转换后的gif放到创建的新子文件夹下</span><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> *.jpg<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">pwd</span><span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> <span class="token string">"<span class="token variable">${i}</span>"</span><span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token function">mkdir</span> <span class="token string">"<span class="token variable">$D</span>/gif/"</span><span class="token punctuation">;</span> ffmpeg -f image2 -i <span class="token variable">${i}</span> <span class="token variable">$D</span>/gif/<span class="token variable">${B<span class="token operator">%</span>.*}</span>.gif<span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="方式5-Shell脚本"><a href="#方式5-Shell脚本" class="headerlink" title="方式5 Shell脚本"></a>方式5 Shell脚本</h3><blockquote><p>脚本名为pic2gif.sh；运行命令：./pic2gif.sh</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> *.jpg<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token assign-left variable">D</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>    <span class="token assign-left variable">B</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> <span class="token string">"<span class="token variable">${i}</span>"</span><span class="token variable">)</span></span>    <span class="token function">mkdir</span> <span class="token string">"<span class="token variable">$D</span>/gif/"</span>    ffmpeg -f image2 -i <span class="token variable">${i}</span> <span class="token variable">$D</span>/gif/<span class="token variable">${B<span class="token operator">%</span>.*}</span>.gif<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FFmpeg </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode常用插件</title>
      <link href="/posts/18925.html"/>
      <url>/posts/18925.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="VSCode常用插件-x2F-扩展"><a href="#VSCode常用插件-x2F-扩展" class="headerlink" title="VSCode常用插件/扩展"></a>VSCode常用插件/扩展</h1><h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><p>可以实现在VSCode中使用Vim文本编辑器，省去在linux中配置Vim步骤；如果对Vim使用较熟练的话，还是非常好用的</p><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>识别安装的Python环境，函数、参数自动补全，可直接或跳转查看函数帮助，非常好用</p><h2 id="TabOut"><a href="#TabOut" class="headerlink" title="TabOut"></a>TabOut</h2><p>使用场景：</p><p>使用VSCode敲代码时，经常会用到函数、列表和字符串等。引号和括号（小括号、大括号和中括号）成对出现，正常情况下跳转右括号和右引号需要按右箭头，但右箭头离主键盘较远，按起来不是很方便。因此需要一种方便跳转右括号和右引号的方式</p><h2 id="Remote-Development"><a href="#Remote-Development" class="headerlink" title="Remote Development"></a>Remote Development</h2><p>远程连接服务器和超算的扩展套件</p><h2 id="Lammps-Syntax-Highlighting"><a href="#Lammps-Syntax-Highlighting" class="headerlink" title="Lammps Syntax Highlighting"></a>Lammps Syntax Highlighting</h2><p>Lammps语法命令高亮</p><h2 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h2><p>图片上传插件，支持github，smms图床等</p><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 科研工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习教程</title>
      <link href="/posts/10457.html"/>
      <url>/posts/10457.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Shell学习教程"><a href="#Shell学习教程" class="headerlink" title="Shell学习教程"></a>Shell学习教程</h1><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>字符串是Shell编程中最常用最有用的数据类型；字符串可以用单引号，也可以用双引号，也可以不用引号。</p><p><strong>单双引号的区别：</strong></p><ul><li><strong>双引号里可以有变量</strong>，单引号则原样输出；</li><li>双引号里可以出现转义字符，单引号则原样输出；</li><li>单引号字串中不能出现单引号。</li></ul><h3 id="拼接字符串"><a href="#拼接字符串" class="headerlink" title="拼接字符串"></a>拼接字符串</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">str1</span><span class="token operator">=</span><span class="token string">'i'</span><span class="token assign-left variable">str2</span><span class="token operator">=</span><span class="token string">'love'</span><span class="token assign-left variable">str3</span><span class="token operator">=</span><span class="token string">'you'</span><span class="token builtin class-name">echo</span> <span class="token variable">$str1</span> <span class="token variable">$str2</span> <span class="token variable">$str3</span><span class="token builtin class-name">echo</span> <span class="token variable">$str1</span><span class="token variable">$str2</span><span class="token variable">$str3</span><span class="token builtin class-name">echo</span> <span class="token variable">$str1</span>,<span class="token variable">$str2</span>,<span class="token variable">$str3</span><span class="token comment"># 输出：</span><span class="token comment"># i love you</span><span class="token comment"># iloveyou</span><span class="token comment"># i,love,you</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取字符串长度"><a href="#获取字符串长度" class="headerlink" title="获取字符串长度"></a>获取字符串长度</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash/</span><span class="token assign-left variable">str</span><span class="token operator">=</span><span class="token string">'i love you'</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>#str<span class="token punctuation">}</span><span class="token variable">`</span></span><span class="token comment"># 输出：10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash/</span><span class="token assign-left variable">str</span><span class="token operator">=</span><span class="token string">'i love you'</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>str:1<span class="token punctuation">}</span><span class="token variable">`</span></span> <span class="token comment"># 从第1个截取到末尾。注意从0开始。</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>str:2:2<span class="token punctuation">}</span><span class="token variable">`</span></span> <span class="token comment"># 从第2个截取2个。</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>str:0<span class="token punctuation">}</span><span class="token variable">`</span></span><span class="token comment"># 全部截取。</span><span class="token comment"># 输出：</span><span class="token comment"># love you</span><span class="token comment"># lo</span><span class="token comment"># i love you</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash/</span><span class="token assign-left variable">file0</span><span class="token operator">=</span><span class="token string">"test.yaml"</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>file0%.*<span class="token punctuation">}</span><span class="token variable">`</span></span>  <span class="token comment"># 打印.左边的字符串</span><span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span>file0<span class="token comment">#*.}</span><span class="token variable">`</span></span>  <span class="token comment"># 打印.右边的字符串</span><span class="token assign-left variable">file1</span><span class="token operator">=</span><span class="token string">"<span class="token variable">${file0<span class="token operator">%</span>.*}</span>-modified.<span class="token variable">${file0<span class="token operator">#</span>*.}</span>"</span><span class="token builtin class-name">echo</span> <span class="token variable">$file1</span><span class="token comment"># 输出：</span><span class="token comment"># test</span><span class="token comment"># yaml</span><span class="token comment"># test-modified.yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="条件判断：if语句"><a href="#条件判断：if语句" class="headerlink" title="条件判断：if语句"></a>条件判断：if语句</h3><p>语法格式：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> expression <span class="token punctuation">]</span><span class="token keyword">then</span>   Statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span> to be executed <span class="token keyword">if</span> expression is <span class="token boolean">true</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：<code>expression</code> 和方括号([ ])之间必须有空格，否则会有语法错误。</p></blockquote><p>三种if … else 语句：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">..</span>. <span class="token keyword">fi</span> 语句<span class="token keyword">if</span> <span class="token punctuation">..</span>. <span class="token keyword">else</span> <span class="token punctuation">..</span>. <span class="token keyword">fi</span> 语句<span class="token keyword">if</span> <span class="token punctuation">..</span>. <span class="token keyword">elif</span> <span class="token punctuation">..</span>. <span class="token keyword">else</span> <span class="token punctuation">..</span>. <span class="token keyword">fi</span> 语句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>语法格式：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 列表<span class="token keyword">do</span>    command1    command2    <span class="token punctuation">..</span>.    commandN<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>只要while后面的条件满足，就一直执行do里面的代码块。</p><p>语法格式：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">while</span> <span class="token builtin class-name">command</span><span class="token keyword">do</span>   Statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span> to be executed <span class="token keyword">if</span> <span class="token builtin class-name">command</span> is <span class="token boolean">true</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用Atomate计算弹性常数</title>
      <link href="/posts/54196.html"/>
      <url>/posts/54196.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><ol><li>创建你所要计算体系的POSCAR文件，用脚本将POSCAR中的结构读入并产生计算弹性常数workflow；</li><li>该workflow有26个fireworks，第1个是结构弛豫，第2-25是不同程度的变形（控制在弹性变形范围内（具体数值范围忘了，可看<code>wf_elastic_constant()</code>源代码），拉伸、压缩和剪切变形），第26个是分析弹性数据；</li><li><code>qlaunch rapidfire</code>命令提交这26个fireworks；</li><li>最后会在mongodb中新建一个elasticity的collection，里面有其拟合好的弹性常数，通过脚本获取。</li></ol><h1 id="产生计算弹性常数workflow脚本"><a href="#产生计算弹性常数workflow脚本" class="headerlink" title="产生计算弹性常数workflow脚本"></a>产生计算弹性常数workflow脚本</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pymatgen<span class="token punctuation">.</span>core <span class="token keyword">import</span> Structure<span class="token keyword">from</span> fireworks <span class="token keyword">import</span> LaunchPad<span class="token keyword">from</span> atomate<span class="token punctuation">.</span>common<span class="token punctuation">.</span>powerups <span class="token keyword">import</span> add_namefile<span class="token keyword">from</span> atomate<span class="token punctuation">.</span>vasp<span class="token punctuation">.</span>powerups <span class="token keyword">import</span> add_modify_incar<span class="token punctuation">,</span> add_modify_kpoints<span class="token keyword">from</span> atomate<span class="token punctuation">.</span>vasp<span class="token punctuation">.</span>workflows <span class="token keyword">import</span> wf_elastic_constant<span class="token comment"># 添加了add_namefile和修改了部分incar参数</span>struct <span class="token operator">=</span> Structure<span class="token punctuation">.</span>from_file<span class="token punctuation">(</span><span class="token string">'POSCAR'</span><span class="token punctuation">)</span><span class="token comment"># 计算弹性常数用wf_elastic_constant()函数</span>workflow <span class="token operator">=</span> wf_elastic_constant<span class="token punctuation">(</span>struct<span class="token punctuation">)</span>workflow <span class="token operator">=</span>  add_namefile<span class="token punctuation">(</span>workflow<span class="token punctuation">)</span><span class="token comment"># 修改INCAR中的部分参数，与MP中的参数尽量保持一致</span>workflow <span class="token operator">=</span> add_modify_incar<span class="token punctuation">(</span>workflow<span class="token punctuation">,</span> modify_incar_params<span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'incar_update'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'ISMEAR'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'ENCUT'</span><span class="token punctuation">:</span> <span class="token number">520</span><span class="token punctuation">,</span> <span class="token string">'EDIFF'</span><span class="token punctuation">:</span> <span class="token number">5e-5</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 可以修改KPOINTS中的k点数目</span><span class="token comment"># workflow = add_modify_kpoints(workflow, modify_kpoints_params= {'kpoints_update': {}}    )</span>launchpad <span class="token operator">=</span> LaunchPad<span class="token punctuation">.</span>auto_load<span class="token punctuation">(</span><span class="token punctuation">)</span>launchpad<span class="token punctuation">.</span>add_wf<span class="token punctuation">(</span>workflow<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="获取弹性常数数据脚本"><a href="#获取弹性常数数据脚本" class="headerlink" title="获取弹性常数数据脚本"></a>获取弹性常数数据脚本</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> atomate<span class="token punctuation">.</span>vasp<span class="token punctuation">.</span>database <span class="token keyword">import</span> VaspCalcDb<span class="token keyword">from</span> bson<span class="token punctuation">.</span>json_util <span class="token keyword">import</span> dumps<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> json<span class="token comment"># 连接db数据库</span>db_json_path <span class="token operator">=</span> <span class="token string">"your db.json file path"</span>atomate_db <span class="token operator">=</span> VaspCalcDb<span class="token punctuation">.</span>from_db_file<span class="token punctuation">(</span>db_json_path<span class="token punctuation">)</span><span class="token comment"># 将mongodb中存储的数据转化成json文件保存到本地，以后读取就不需再连接db数据库</span><span class="token keyword">def</span> <span class="token function">get_elastic_data_mongodb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 连接elasticity collection</span>    elastic_collection <span class="token operator">=</span> atomate_db<span class="token punctuation">.</span>db<span class="token punctuation">[</span><span class="token string">'elasticity'</span><span class="token punctuation">]</span>  <span class="token comment"># 连接elasticity collection</span>    <span class="token comment"># print(type(elastic_collection))</span>    elastic_entries <span class="token operator">=</span> elastic_collection<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 只有一条ehtry，find()可以没有参数</span>    elastic_entries_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>elastic_entries<span class="token punctuation">)</span>    <span class="token comment"># print(elastic_entries_list)</span>    elastic_json <span class="token operator">=</span> dumps<span class="token punctuation">(</span>elastic_entries_list<span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'elastic-data.json'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>elastic_json<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'elastic data convert to json. Done! '</span><span class="token punctuation">)</span><span class="token comment"># 读取json文件中的弹性常数数据</span><span class="token keyword">def</span> <span class="token function">read_json_elastic_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'elastic-data.json'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    json_entries <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    elastic_tensor <span class="token operator">=</span> json_entries<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'elastic_tensor'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'raw'</span><span class="token punctuation">]</span> <span class="token comment"># raw或ieee_format形式</span>    <span class="token comment"># print(elastic_tensor)</span>    elastic_tensor_np <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>elastic_tensor<span class="token punctuation">)</span>    elastic_tensor_np <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">round</span><span class="token punctuation">(</span>elastic_tensor_np<span class="token punctuation">)</span>    <span class="token comment"># print(elastic_tensor_np)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'elastic tensor C11 is: </span><span class="token interpolation"><span class="token punctuation">{</span>elastic_tensor_np<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> GPa'</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'elastic tensor C12 is: </span><span class="token interpolation"><span class="token punctuation">{</span>elastic_tensor_np<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> GPa'</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'elastic tensor C44 is: </span><span class="token interpolation"><span class="token punctuation">{</span>elastic_tensor_np<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> GPa'</span></span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token comment"># get_elastic_data_mongodb()</span>    read_json_elastic_data<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
          <category> 高通量 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Atomate </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把数据结构直接拆分到多个变量中，不要专门通过下标访问</title>
      <link href="/posts/58088.html"/>
      <url>/posts/58088.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Effective-Python"><a href="#Effective-Python" class="headerlink" title="Effective Python"></a>Effective Python</h1><blockquote><p>书中的代码：<a href="https://github.com/almazkun/effective_python">https://github.com/almazkun/effective_python</a></p></blockquote><h2 id="第1章-培养Pythonic思维"><a href="#第1章-培养Pythonic思维" class="headerlink" title="第1章 培养Pythonic思维"></a>第1章 培养Pythonic思维</h2><h3 id="第6条-把数据结构直接拆分到多个变量中，不要专门通过下标访问"><a href="#第6条-把数据结构直接拆分到多个变量中，不要专门通过下标访问" class="headerlink" title="第6条 把数据结构直接拆分到多个变量中，不要专门通过下标访问"></a>第6条 把数据结构直接拆分到多个变量中，不要专门通过下标访问</h3><p><strong>unpacking</strong></p><ul><li>拆分，特殊Python语法，可以把数据结构里面的多个值分别赋给相应的变量，只需一行代码</li><li><strong>可以原地交换两个变量</strong></li><li>凡可迭代对象均能拆分，无论里面还有多少层迭代结构</li><li>尽量通过unpacking来拆解序列之中的数据，而不要通过下标访问</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 将元组中的元素分别赋给多个变量</span>item <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"Peanut butter"</span><span class="token punctuation">,</span> <span class="token string">"Jelly"</span><span class="token punctuation">)</span>first<span class="token punctuation">,</span> second <span class="token operator">=</span> item <span class="token comment">#Unpacking</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>first<span class="token punctuation">}</span></span><span class="token string"> and </span><span class="token interpolation"><span class="token punctuation">{</span>second<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># output</span><span class="token triple-quoted-string string">"""Peanut butter and Jelly"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 升序排序算法</span><span class="token keyword">def</span> <span class="token function">bubble_sort</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 若无该循环语句，只会进行一轮循环，不一定使得完全升序</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment"># Swap 原地交换两个变量</span>    <span class="token keyword">return</span> anames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"pretzels"</span><span class="token punctuation">,</span> <span class="token string">"carrots"</span><span class="token punctuation">,</span> <span class="token string">"arugula"</span><span class="token punctuation">,</span> <span class="token string">"bacon"</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>bubble_sort<span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># output</span><span class="token triple-quoted-string string">"""['pretzels', 'carrots', 'arugula', 'bacon'] carrots pretzels['carrots', 'pretzels', 'arugula', 'bacon'] arugula pretzels['carrots', 'arugula', 'pretzels', 'bacon'] bacon pretzels['carrots', 'arugula', 'bacon', 'pretzels'] arugula carrots['arugula', 'carrots', 'bacon', 'pretzels'] bacon carrots['arugula', 'bacon', 'carrots', 'pretzels']"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 在for循环和enumerate()中使用unpacking</span>snacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">"bacon"</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"donut"</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"muffin"</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> rank<span class="token punctuation">,</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> calories<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>snacks<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"#</span><span class="token interpolation"><span class="token punctuation">{</span>rank<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string"> has </span><span class="token interpolation"><span class="token punctuation">{</span>calories<span class="token punctuation">}</span></span><span class="token string"> calories"</span></span><span class="token punctuation">)</span><span class="token comment"># output</span><span class="token triple-quoted-string string">"""#1: bacon has 350 calories#2: donut has 240 calories#3: muffin has 190 calories"""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最优化--最优性条件</title>
      <link href="/posts/6838.html"/>
      <url>/posts/6838.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="最优性条件"><a href="#最优性条件" class="headerlink" title="最优性条件"></a>最优性条件</h1><p>求解非线性最优化问题的基础是掌握最优解满足的必要和充分条件</p><ul><li>无约束优化</li><li>约束优化</li><li>鞍点问题</li></ul><h2 id="无约束问题的极值条件"><a href="#无约束问题的极值条件" class="headerlink" title="无约束问题的极值条件"></a>无约束问题的极值条件</h2><p>无约束最优化问题：<br>$$<br>\text{min}\enspace f(\boldsymbol{x}),\enspace \boldsymbol{x}\in R^{n}<br>$$</p><p><strong>定理</strong>：给 $ \bar{\boldsymbol{x}},\text{s.t.} \enspace f(\boldsymbol{x}) $可微，且$ \exists \boldsymbol{d},\enspace \text{s.t.}\enspace \nabla f(\bar{\boldsymbol{x}})\boldsymbol{d}&lt;0  $，则$ \exists \delta &gt;0,\enspace \text{s.t.} $<br>$$<br>f(\bar{\boldsymbol{x}}+\lambda \boldsymbol{d}) &lt; f(\bar{\boldsymbol{x}}),\enspace \forall \lambda \in (0,\lambda)<br>$$</p><p><strong>定理</strong>（局部极小的一阶必要条件）：$ f(\boldsymbol{x}) $ 在 $ \bar{\boldsymbol{x}} $ 可微，若 $ \bar{\boldsymbol{x}} $ 局部极小，$ \Longrightarrow \nabla f(\bar{\boldsymbol{x}})=\boldsymbol{0} $</p><p><strong>定理</strong>（局部极小的一阶必要条件）：$ f(\boldsymbol{x}) $ 在 $ \bar{\boldsymbol{x}} $ 二次可微，若 $ \bar{\boldsymbol{x}} $ 局部极小，$ \Longrightarrow \nabla ^{2}f(\bar{\boldsymbol{x}}) $ 半正定</p><p><strong>定理</strong>（二阶充分条件）：$ f(\boldsymbol{x}) $ 在 $ \bar{\boldsymbol{x}} $ 二次可微，若 $ \nabla f(\bar{\boldsymbol{x}})=0,\enspace \nabla ^{2}f(\bar{\boldsymbol{x}}) $ 正定$ \Longrightarrow \bar{\boldsymbol{x}} $ 局部极小</p><p><strong>定理</strong>（全局极小的充分必要条件）：$f(\boldsymbol{x}) $ 在 为可微凸函数，则 $ \bar{\boldsymbol{x}} $ 全局极小 $ \iff \nabla f(\bar{\boldsymbol{x}})=0$</p><h2 id="约束极值问题的最优性条件"><a href="#约束极值问题的最优性条件" class="headerlink" title="约束极值问题的最优性条件"></a>约束极值问题的最优性条件</h2><h3 id="约束极值问题"><a href="#约束极值问题" class="headerlink" title="约束极值问题"></a>约束极值问题</h3><p>约束极值问题：<br>$$<br>\begin{equation}<br>    \begin{aligned}<br>        \min &amp;\enspace f(\boldsymbol{x}) \enspace \enspace \boldsymbol{x} \in \mathbb{R}^n\<br>        \text{s.t.} &amp;\enspace g_i (\boldsymbol{x}) \geqslant 0, \enspace i=1,\cdots,m \enspace  \<br>                    &amp;\enspace h_j (\boldsymbol{x}) = 0, \enspace j=1,\cdots,l \enspace \<br>    \end{aligned}<br>\end{equation}<br>$$</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 最优化 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nobodyの第一篇博客</title>
      <link href="/posts/59448.html"/>
      <url>/posts/59448.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="博客简介"><a href="#博客简介" class="headerlink" title="博客简介"></a>博客简介</h1><p>Hey，这里是Nobody的博客网站~<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><p>创建博客网站的想法其实很久之前就有了，前阵子对公众号写编程和科研课题方面的文章时<strong>不能二次修改</strong>很是头疼，这个想法就愈发强烈了；网络资源虽然很丰富，但很杂而且很多内容很烂，并没有多大的作用，创建博客网站的另一个主要原因就是想<strong>筛选出能真正解决自己问题的精炼有用资源（也希望对读者有用）</strong>。磨磨蹭蹭耗时近一个月，最终，属于自己的博客网站诞生了！</p><p><strong>博客内容的主要方向</strong>将会是<strong>记录自己碎片化的编程、科研课题学习及自己感兴趣的一些内容</strong>，应该不太会涉及自己的个人生活（不想在偌大的网络中过多暴露自己）。</p><p>博客采用的框架是hexo，选用matery主题，部署在github上，购买域名，并添加一些其他功能。</p><hr><h1 id="博客已实现功能"><a href="#博客已实现功能" class="headerlink" title="博客已实现功能"></a>博客已实现功能</h1><p>目前博客网站已实现的功能有：</p><ul><li><input checked="" disabled="" type="checkbox"> 首页底部显示音乐（网易云歌单）</li><li><input checked="" disabled="" type="checkbox"> 单独音乐页面（网易云歌单）</li><li><input checked="" disabled="" type="checkbox"> 单独相册页面</li><li><input checked="" disabled="" type="checkbox"> 博客中插入音乐和B站视频</li><li><input checked="" disabled="" type="checkbox"> waline评论系统，无需登录即可提交评论，也可登录提交评论，所需权限很低</li><li><input checked="" disabled="" type="checkbox"> 基础功能的看板娘</li><li><input checked="" disabled="" type="checkbox"> 博客文章生成永久链接</li><li><input checked="" disabled="" type="checkbox"> 暗黑模式切换</li><li><input checked="" disabled="" type="checkbox"> 直达评论按钮</li><li><input checked="" disabled="" type="checkbox"> 内容折叠功能</li><li><input checked="" disabled="" type="checkbox"> 动态标题（离开或点击博客标签页，会出现可爱字体）</li><li><input checked="" disabled="" type="checkbox"> 导航页</li><li><input checked="" disabled="" type="checkbox"> 加载动画（吃豆子）</li><li><input checked="" disabled="" type="checkbox"> 外挂标签（类似markdown中的引用，不过可以显示红黄蓝三种颜色）</li><li><input checked="" disabled="" type="checkbox"> 支持RSS订阅</li><li><input checked="" disabled="" type="checkbox"> Hexo新建博客文章自动打开编辑器</li></ul><hr><h1 id="博客待实现-x2F-完善功能"><a href="#博客待实现-x2F-完善功能" class="headerlink" title="博客待实现/完善功能"></a>博客待实现/完善功能</h1><p>待实现或完善的功能：</p><ul><li><input disabled="" type="checkbox"> 可换装、对话的看板娘</li><li><input disabled="" type="checkbox"> 相册加密</li><li><input disabled="" type="checkbox"> 博客底部添加github badge</li><li><input disabled="" type="checkbox"> 添加思维导图渲染</li><li><input disabled="" type="checkbox"> 图片懒加载</li><li><input disabled="" type="checkbox"> 更加酷炫的外挂标签</li><li><input disabled="" type="checkbox"> Hexo博客文章展示pdf内容</li><li><input disabled="" type="checkbox"> 让博客支持通知功能</li><li><input disabled="" type="checkbox"> 修改主题字体</li><li><input disabled="" type="checkbox"> 博客网络优化（CDN加速等）</li><li><input disabled="" type="checkbox"> 解决markdown复选框在hexo博客中不显示的问题</li><li><input disabled="" type="checkbox"> …</li></ul><hr><p>Anyway，感谢看到最后！共同目睹Nobody以后的创作吧！</p><h1 id="博客已实现功能部分展示"><a href="#博客已实现功能部分展示" class="headerlink" title="博客已实现功能部分展示"></a>博客已实现功能部分展示</h1><h2 id="博客插入音乐"><a href="#博客插入音乐" class="headerlink" title="博客插入音乐"></a>博客插入音乐</h2>    <div id="aplayer-fNqtFosT" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="1301245903" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div><hr><h2 id="博客插入视频"><a href="#博客插入视频" class="headerlink" title="博客插入视频"></a>博客插入视频</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=984726281&amp;bvid=BV1Nt4y1n7hv&amp;cid=807808976&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%;height: 100%; left: 0; top: 0;">     </iframe></div>-----<h2 id="折叠功能"><a href="#折叠功能" class="headerlink" title="折叠功能"></a>折叠功能</h2><div class="spoiler collapsed">    <div class="spoiler-title">        点击显/隐内容    </div>    <div class="spoiler-content">        <p>Hi，这是隐藏内容</p>    </div></div><hr><h2 id="外挂标签"><a href="#外挂标签" class="headerlink" title="外挂标签"></a>外挂标签</h2><div class="uk-alert uk-alert-danger"><i class="fas fa-exclamation-triangle"></i> 红色外挂标签</div><div class="uk-alert uk-alert-success"><i class="fa fa-check-circle"></i> 绿色外挂标签</div><div class="uk-alert uk-alert-warning"><i class="fa fa-exclamation-circle"></i> 黄色外挂标签</div><blockquote><p>好像不是黄色？</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
